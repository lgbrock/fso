{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/Notifications.jsx","services/phonebook.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","event","handleFilterChange","PersonForm","onSubmit","addName","newName","setNewName","target","newNumber","setNewNumber","type","Persons","persons","toggleDelete","label","map","person","className","name","number","onClick","id","Notifications","successMessage","errorMessage","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","setPersons","setFilter","setSuccessMessage","setErrorMessage","useEffect","phonebookService","initialPersons","catch","error","alert","filteredNames","toLowerCase","includes","preventDefault","existingPerson","find","window","confirm","returnedPerson","setTimeout","err","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3777af3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter shown with:{' '}\n\t\t\t<input\n\t\t\t\tvalue={props.filter}\n\t\t\t\tonChange={(event) => props.handleFilterChange(event)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = (props) => {\n\treturn (\n\t\t<form onSubmit={props.addName}>\n\t\t\t<div>\n\t\t\t\tname:{' '}\n\t\t\t\t<input\n\t\t\t\t\tvalue={props.newName}\n\t\t\t\t\tonChange={(event) => props.setNewName(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber:{' '}\n\t\t\t\t<input\n\t\t\t\t\tvalue={props.newNumber}\n\t\t\t\t\tonChange={(event) => props.setNewNumber(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type='submit'>add</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, toggleDelete }) => {\n\tconst label = persons.map((person) => {\n\t\treturn (\n\t\t\t<p className='persons' key={person.name}>\n\t\t\t\t{person.name} {person.number}\n\t\t\t\t<button className='btn' onClick={() => toggleDelete(person.id)}>\n\t\t\t\t\tdelete\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t);\n\t});\n\treturn <p>{label}</p>;\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notifications = ({ successMessage, errorMessage }) => {\n\treturn (\n\t\t<div className='notifications'>\n\t\t\t{successMessage && <div className='success'>{successMessage}</div>}\n\t\t\t{errorMessage && <div className='error'>{errorMessage}</div>}\n\t\t</div>\n\t);\n};\n\nexport default Notifications;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then((response) => response.data);\n};\n\nconst create = (newPerson) => {\n\tconst request = axios.post(baseUrl, newPerson);\n\treturn request.then((response) => response.data);\n};\n\nconst update = (id, newPerson) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newPerson);\n\treturn request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\treturn request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","// // *-- PHONEBOOK --*\nimport React, { useEffect, useState } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notifications';\nimport phonebookService from './services/phonebook';\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [filter, setFilter] = useState('');\n\tconst [successMessage, setSuccessMessage] = useState(null);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\t// get all names in phonebook db and display on window load\n\tuseEffect(() => {\n\t\tphonebookService\n\t\t\t.getAll()\n\t\t\t.then((initialPersons) => setPersons(initialPersons))\n\t\t\t.catch((error) => alert(error));\n\t}, []);\n\n\t// filter names event handler\n\tconst handleFilterChange = (event) => {\n\t\tsetFilter(event.target.value);\n\t\tconst filteredNames = persons.filter((person) =>\n\t\t\tperson.name.toLowerCase().includes(event.target.value.toLowerCase())\n\t\t);\n\t\tsetPersons(filteredNames);\n\t};\n\n\t// add new name event handler\n\tconst addName = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newPerson = {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber,\n\t\t};\n\n\t\t// check if name already exists\n\t\tconst existingPerson = persons.find(\n\t\t\t(person) => person.name.toLowerCase() === newName.toLowerCase()\n\t\t);\n\n\t\t// add new name to database\n\t\tif (!existingPerson) {\n\t\t\tphonebookService\n\t\t\t\t.create(newPerson)\n\t\t\t\t.then((returnedPerson) => {\n\t\t\t\t\tsetPersons(persons.concat(returnedPerson));\n\t\t\t\t\tsetSuccessMessage(`Added ${newName}`);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetSuccessMessage(null);\n\t\t\t\t\t}, 3000);\n\t\t\t\t\tsetNewName('');\n\t\t\t\t\tsetNewNumber('');\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tsetErrorMessage(error.response.data.error);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t\t}, 5000);\n\t\t\t\t});\n\t\t} else {\n\t\t\t// update existing name in database\n\t\t\tif (\n\t\t\t\twindow.confirm(\n\t\t\t\t\t`${newPerson.name} is already added to phonebook, replace the old number with a new one?`\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tphonebookService\n\t\t\t\t\t.update(existingPerson.id, newPerson)\n\t\t\t\t\t.then((returnedPerson) => {\n\t\t\t\t\t\tsetPersons(\n\t\t\t\t\t\t\tpersons.map((person) =>\n\t\t\t\t\t\t\t\tperson.id !== returnedPerson.id ? person : returnedPerson\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetSuccessMessage(`Updated ${newName}`);\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetSuccessMessage(null);\n\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t})\n\t\t\t\t\t// alert that name has already been Deleted\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tif (err.response.data) {\n\t\t\t\t\t\t\tsetErrorMessage(err.response.data.error);\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetErrorMessage(\n\t\t\t\t\t\t\t\t`Information of ${newPerson.name} has already been removed from server`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetPersons(\n\t\t\t\t\t\t\t\tpersons.filter((person) => person.id !== existingPerson.id)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t// toggle delete of event handler\n\tconst toggleDelete = (id) => {\n\t\tconst person = persons.find((person) => person.id === id);\n\t\tif (!window.confirm(`Delete ${person.name}?`)) {\n\t\t\treturn;\n\t\t}\n\t\tphonebookService.remove(id).then(() => {\n\t\t\tsetPersons(persons.filter((person) => person.id !== id));\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification\n\t\t\t\tsuccessMessage={successMessage}\n\t\t\t\terrorMessage={errorMessage}\n\t\t\t/>\n\t\t\t<Filter filter={filter} handleFilterChange={handleFilterChange} />\n\t\t\t<h3>Add a new</h3>\n\t\t\t<PersonForm\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\taddName={addName}\n\t\t\t\tsetNewName={setNewName}\n\t\t\t\tsetNewNumber={setNewNumber}\n\t\t\t/>\n\t\t\t<h3>Numbers</h3>\n\t\t\t<Persons persons={persons} toggleDelete={toggleDelete} filter={filter} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}